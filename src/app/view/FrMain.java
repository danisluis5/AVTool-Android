/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app.view;

import utilize.Constant;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Panel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JTabbedPane;
import javax.swing.JToolBar;
import javax.swing.KeyStroke;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import utilize.MenuBar;
import utilize.TabbedPane;
import utilize.ToolBar;

/**
 *
 * @author vuongluis
 */
@SuppressWarnings("ALL")
public class FrMain extends JFrame implements MouseListener,ActionListener{

    private JMenu avMenuFile;
    
    private JTabbedPane tabHome;
    private TabbedPane tabUser;
    
    private MenuBar mMenuBar;
    
    private JButton newDocument;
    private JButton openFolder;
    private JButton saveDoc;
    private JButton saveAsDoc;
    private JButton play;
    private JButton excel;
    
    
    private JLabel txtWelcome;
    private JLabel txtAdmin;
    
    private Panel bottom;
    
    public FrMain() {
        initComponents();
        adjustInforApp();
        initCenter();
    }
    
    private void adjustInforApp() {
        configureApp(this);
        initMenuBar();
        initMenuItem();
    }
    
    private void configureApp(JFrame app) {
        app.setTitle(Constant.TITLE);
        app.setLocationRelativeTo(this);
        app.setIconImage((new ImageIcon(getClass().getResource(Constant.UTILIZE_IMAGE))).getImage());
    }
    
 
    public void initMenuBar() {
        mMenuBar = new MenuBar();
        avMenuFile = new JMenu();
        setupItemMenuBar(mMenuBar,avMenuFile, Constant.MenuBar.FILE);
        this.setJMenuBar(mMenuBar);
    }
    
    private void initMenuItem() {
        // Menu File
        setupJMenuItem(avMenuFile, jMenuItem1, Constant.FILE.NEW_FILE, 1);
        setupJMenuItem(avMenuFile, jMenuItem2, Constant.FILE.OPEN_FILE, 1);
        setupJMenuItem(avMenuFile, jMenuItem3, Constant.FILE.SAVE_FILE, 1);
        setupJMenuItem(avMenuFile, jMenuItem4, Constant.FILE.SAVE_AS_FILE, 1);
        setupJMenuItem(avMenuFile, jMenuItem5, Constant.FILE.IMPORT_OLD_VERSION, 1);
        setupJMenuItem(avMenuFile, jMenuItem6, Constant.FILE.EXPORT_EXCEL, 1);
        setupJMenuItem(avMenuFile, jMenuItem7, Constant.FILE.EXIST, 1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Center = new javax.swing.JPanel();
        Bottom = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Center.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout CenterLayout = new javax.swing.GroupLayout(Center);
        Center.setLayout(CenterLayout);
        CenterLayout.setHorizontalGroup(
            CenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 788, Short.MAX_VALUE)
        );
        CenterLayout.setVerticalGroup(
            CenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 524, Short.MAX_VALUE)
        );

        getContentPane().add(Center, java.awt.BorderLayout.CENTER);

        Bottom.setLayout(new java.awt.BorderLayout());
        getContentPane().add(Bottom, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(FrMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FrMain().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Bottom;
    private javax.swing.JPanel Center;
    // End of variables declaration//GEN-END:variables

    private void setupItemMenuBar(MenuBar menuBar, JMenu menu, String title) {
        menu.setText(title);
        menu.setFont(new Font("Tahoma", Font.PLAIN, 13));
        menu.addMouseListener(this);
        menuBar.add(menu);
    }

    // FILE
    private JMenuItem jMenuItem1;
    private JMenuItem jMenuItem2;
    private JMenuItem jMenuItem3;
    private JMenuItem jMenuItem4;
    private JMenuItem jMenuItem5;
    private JMenuItem jMenuItem6;
    private JMenuItem jMenuItem7;
    
    // TOOL
    private JMenuItem jMenuItem8;
   
    // CALCULATOR
    private JMenuItem jMenuItem9;
    
    // HELP
    private JMenuItem jMenuItem10;
    private JMenuItem jMenuItem11;
    private JMenuItem jMenuItem12;

    private void setupJMenuItem(JMenu itemMenuBar, JMenuItem menuItem, String title, int control) {
        menuItem = new JMenuItem();
        menuItem.setFont(new Font("Tahoma", Font.PLAIN, 11));
        menuItem.setText(title);
        menuItem.setFont(new Font("Tahoma", Font.PLAIN, 13));
        menuItem.setAccelerator(getShortKeyWindowKeyBoard(control));
        itemMenuBar.add(menuItem);
    }
    
    private KeyStroke getShortKeyWindowKeyBoard(int control) {
        switch(control) {
            case 1:
                return KeyStroke.getKeyStroke(KeyEvent.VK_C, InputEvent.CTRL_MASK);                
        }
        return null;
    }

    private void initCenter() {
        tabHome = new JTabbedPane();
        tabHome.setFont(new Font("Tahoma", Font.BOLD, 12));
        tabHome.setBorder(BorderFactory.createEmptyBorder());
        Center.setLayout(new BorderLayout());
        Center.add(tabHome,BorderLayout.CENTER);
        initTabJpanelBar(tabHome,1);
    }

    private void initTabJpanelBar(JTabbedPane tab,int select) {
        if(select == 1){
            tab.add(Constant.TAB.GRADLE,new FrContent());
        } else if(select == 2) {
            tab.add(Constant.TAB.GRADLE,new FrContent());
        }
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mousePressed(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseExited(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
